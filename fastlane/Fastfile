opt_out_usage
fastlane_version '2.105.0'

default_platform :ios

platform :ios do
  desc 'Submit a new Beta Build to Fabric'
  lane :deploy_fabric do
    clear_derived_data
    setup_jenkins
    changelog = sh("git log --graph --pretty=format:'%s' --abbrev-commit #{ENV['GIT_PREVIOUS_SUCCESSFUL_COMMIT'] || 'HEAD^^^^^'}..HEAD")
    puts changelog
    gym(scheme: 'iJenkins',
        clean: true,
        include_symbols: true,
        include_bitcode: true,
        output_name: 'iJenkins',
        output_directory: './fastlane/builds',
        export_method: 'ad-hoc')
    upload_symbols_to_crashlytics(
      binary_path: './Crashlytics.framework/uploadDSYM',
      api_token: (ENV['FABRIC_API_KEY']).to_s
    )
    firebase_app_distribution(
      app: '1:257217212216:ios:01006b21175d030fc2dbcd',
      release_notes: changelog.to_s,
      groups: 'internal',
      ipa_path: './fastlane/builds/iJenkins.ipa',
      firebase_cli_token: (ENV['FIREBASE_TOKEN']).to_s
    )
    appcenter_upload(
      api_token: (ENV['APPCENTER_API_TOKEN']).to_s,
      owner_name: 'bludesign',
      app_name: 'iJenkins',
      ipa: './fastlane/builds/iJenkins.ipa',
      dsym: './fastlane/builds/iJenkins.app.dSYM.zip',
      release_notes: changelog.to_s,
      destinations: 'Internal'
    )
  end

  desc 'Generate and Download Certificates and Profiles'
  lane :profiles do |options|
    force = false
    force = true if options[:force]
    readonly = true
    readonly = false if options[:force]
    forceAppStore = false
    forceAppStore = true if options[:forceAppStore]
    readonlyAppStore = true
    readonlyAppStore = false if options[:forceAppStore]
    match(type: 'development',
          force: force,
          app_identifier: 'com.BluDesign.Jenkins',
          git_url: (ENV['CERTIFICATES_GIT']).to_s,
          username: (ENV['ITUNES_USERNAME']).to_s,
          force_for_new_devices: true,
          readonly: readonly)
    match(type: 'adhoc',
          force: force,
          app_identifier: 'com.BluDesign.Jenkins',
          git_url: (ENV['CERTIFICATES_GIT']).to_s,
          username: (ENV['ITUNES_USERNAME']).to_s,
          force_for_new_devices: true,
          readonly: readonly)
    match(type: 'appstore',
          force: forceAppStore,
          app_identifier: 'com.BluDesign.Jenkins',
          git_url: (ENV['CERTIFICATES_GIT']).to_s,
          username: (ENV['ITUNES_USERNAME']).to_s,
          force_for_new_devices: true,
          readonly: readonlyAppStore)
  end

  error do |_lane, exception|
    slack(
      message: exception.message,
      success: false
    )
  end
end
